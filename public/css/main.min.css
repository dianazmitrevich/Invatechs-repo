*{margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}html{font-size:10px;line-height:1.15;scroll-behavior:smooth}body{font:1.6rem/1.5 "Source Sans 3",sans-serif;overflow-x:hidden;overflow-y:scroll;color:#222}.container{width:100%;padding:0 20px;margin:0 auto;position:relative}a{text-decoration:none;color:unset}.g-wrap{min-width:400px;margin:0 auto}.outer-bg{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;max-width:1920px;margin:0 auto;overflow:hidden}.stop-scroll{overflow:hidden!important}.stop-scroll ::-webkit-scrollbar{width:0}.show{opacity:1!important;visibility:visible!important;display:block!important}.overflow-hidden{overflow:hidden}.mb-0{margin-bottom:0!important}.mb-2{margin-bottom:20px}.mt-1{margin-top:10px!important}.mt-2{margin-top:20px!important}.mt-0{margin-top:0!important}.pt-0{padding-top:0!important}.z-i-1,.z-i-2,.z-i-3{position:relative;z-index:1!important}.z-i-2,.z-i-3{z-index:2!important}.z-i-3{z-index:3!important}.h1{font:700 5.6rem "Ubuntu",sans-serif}.h2{font:700 4rem "Ubuntu",sans-serif}.main-btn{padding:10px 70px;background:#efd91b;font-size:20px;line-height:200%;color:#222;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.main-cta{font-size:19px;line-height:200%;padding-right:40px;position:relative}.main-arr-btn::after,.main-cta::after{background:url(../img/arrow-right-icon.svg);position:absolute;content:"";width:20px;height:10px;top:50%;right:0;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.customers-reviews__slider .slider__dots,.main-arr-btn,.main-cta{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.main-arr-btn{font-size:18px;padding:14px 64px 14px 30px;background:#efd91b;color:#222;position:relative}.main-arr-btn::after{right:30px}.customers-reviews__wrapper{padding-top:140px;padding-bottom:80px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.customers-reviews__col-clutch{max-width:520px}.customers-reviews__clutch iframe{border:0;height:80px}.customers-reviews__title{margin-bottom:60px}.customers-reviews__col-slider{max-width:560px}.customers-reviews__slider{position:relative}.customers-reviews__slider:before{background:url(../img/review-quotes.png);position:absolute;content:"";width:144px;height:128px;top:-30px;left:-40px}.customers-reviews__slider .slider__dots{display:-webkit-box;display:-ms-flexbox;display:flex;margin-left:auto;margin-right:auto}.customers-reviews__slider .slider__dots li,.technologies-list__slider .slider__dots li{list-style:none;position:relative;width:8px;margin-right:12px}.customers-reviews__slider .slider__dots li:last-of-type,.technologies-list__slider .slider__dots li:last-of-type{margin-right:0}.customers-reviews__slider .slider__dots li::before,.technologies-list__slider .slider__dots li::before{position:absolute;top:0;left:0;content:"";width:8px;height:8px;border-radius:50%;background:#dbdbdb}.customers-reviews__slider .slider__dots li.slick-active::before,.technologies-list__slider .slider__dots li.slick-active::before{background:#222}.customers-reviews__slider .slider__dots button,.technologies-list__slider .slider__dots button{display:none}.customers-reviews__slider .item__text{font-size:19px;line-height:130%;margin-top:30px;margin-bottom:30px}.customers-reviews__slider .item__author{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:60px}.customers-reviews__slider .item__author .item__author-image{width:80px;height:80px;border-radius:50%;overflow:hidden;margin-right:25px}.customers-reviews__slider .item__author .item__author-image picture,.technologies-list__slider .item__cards .cards__item-img picture{width:100%;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.customers-reviews__slider .item__author .item__author-image picture img{width:100%;height:auto}.customers-reviews__slider .item__author .item__author-name .name{font:400 22px "Ubuntu",sans-serif;letter-spacing:.22px;margin-bottom:9px}.customers-reviews__slider .item__author .item__author-name .position{color:#757575;font-size:18px;font-weight:400;letter-spacing:.18px}.customers-list{margin-top:50px;margin-bottom:50px}.customers-list .slider__item{width:227px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.customers-list .slider__item,.customers-list .slider__item picture,.technologies-list__slider .item__cards .cards__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.customers-list .slider__item picture{width:127px;height:127px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.customers-list .slider__item picture img{width:100%;height:auto;margin-left:50px}.industries-list__item{width:329px;height:586px;aspect-ratio:329/586;overflow:hidden;margin-right:5px}.industries-list__item:hover img{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.industries-list__item picture,.technologies-list__col-image picture{width:100%;height:100%}.industries-list__item picture img{width:100%;height:auto;-webkit-transition:all .5s ease-in-out;-o-transition:all .5s ease-in-out;transition:all .5s ease-in-out}.industries-list__items-slider .slider__arrow,.technologies-list__col-btn span:after{content:"";position:absolute;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.industries-list__items-slider .slider__arrow{background:url(../../img/industries__slider-arrow.svg);width:30px;height:46px;z-index:99}.industries-list__items-slider .slider__arrow-left{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg);left:30px}.industries-list__items-slider .slider__arrow-right{right:30px}.technologies-list__wrapper{padding-top:150px;padding-bottom:100px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.technologies-list__col-texts{width:500px}.technologies-list__title{margin-bottom:80px}.technologies-list__slider .slider__dots{display:-webkit-box;display:-ms-flexbox;display:flex;margin-left:auto;margin-right:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.technologies-list__slider .item__title{font-size:3.2rem;font-weight:700;line-height:140%;color:#efd91b;margin-bottom:40px}.technologies-list__slider .item__cards{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.technologies-list__slider .item__cards .cards__item{width:calc(50% - 40px);margin-bottom:45px}.technologies-list__slider .item__cards .cards__item-img{width:45px;height:45px;margin-right:15px}.technologies-list__col-image picture img,.technologies-list__slider .item__cards .cards__item-img picture img{height:100%;width:auto}.technologies-list__slider .item__cards .cards__item-text{font-size:24px}.technologies-list__col-cta{position:relative}.technologies-list__col-image{width:522px;height:608px;overflow:hidden}.technologies-list__col-btn{font:700 30px "Ubuntu",sans-serif;width:241px;height:241px;border-radius:50%;background:#efd91b;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:absolute;bottom:-50px;left:-120px}.technologies-list__col-btn span{position:relative;padding-right:55px}.technologies-list__col-btn span:after{background:url(../../img/technologies__arrow_right.svg);right:0;width:40px;height:20px}.dark-bg{background:#222;color:#fff;padding:120px 0}.dark-bg .title-wrap{margin-bottom:50px}.dark-bg .title{font:700 4rem "Ubuntu",sans-serif}.dark-bg .title-yellow{font:700 24px "Source Sans 3",sans-serif;color:#efd91b}.dark-side-bg{background:#3e3e3e}.bg-text{position:relative}.bg-text:before{font:700 170px "Ubuntu",sans-serif;white-space:nowrap;position:absolute;text-transform:uppercase;opacity:.04}.footer{background:#222;color:#fff}.footer__wrapper{padding-top:64px;padding-bottom:33px}.footer__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__row:first-of-type{border-bottom:1px solid #525252;padding-bottom:20px;margin-bottom:20px}.footer__col{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.footer__col-main{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer__col-cta .cta__text{color:#949494;font-size:26px;margin-top:47px;margin-bottom:24px}.footer__col-cta .cta__btn,.header__nav li .dropdown__item a{white-space:nowrap}.footer__title{color:#949494;font-size:24px;margin-bottom:10px}.footer__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;margin-bottom:20px}.footer__item img{margin-right:17px}.footer__item span{font-size:18px;line-height:140%;max-width:220px}.footer__policy{color:#b5b5b5;font-size:18px}.footer__socials a{display:inline-block;margin-left:20px}.header{max-width:1920px;height:90px;position:fixed;top:0;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;z-index:999999}.header__desktop{width:100%;padding-left:80px;padding-right:80px}.header__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__col:has(.header__nav){height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.header__nav{font:18px "Ubuntu";display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-left:0}.header__nav li{list-style:none;margin-left:30px;position:relative}.header__nav li:hover .dropdown{opacity:1;visibility:visible}.header__nav li .dropdown{position:absolute;top:40px;right:0;opacity:0;visibility:hidden;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out}.header__nav li .dropdown__wrapper{background:#fff;padding:14px 10px;border-radius:8px}.header__nav li .dropdown__item{margin-bottom:10px}.header__nav li .dropdown__item:last-of-type,.why-choose .choose__col-text p:last-of-type{margin-bottom:0}.header__nav .more-nav-dropdown{position:relative;display:none}.header__btn{background:#efd91b;padding:12px 40px;border-radius:8px}.main-cases .cases__wrapper{position:relative;padding-bottom:50px}.main-cases .cases__btn{position:absolute;bottom:0;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);width:241px;height:241px;border-radius:50%;background:#efd91b;z-index:99;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:20px;font-weight:700}.main-cases .cases__btn picture{margin-top:15px;margin-bottom:-15px}.main-cases .cases__item{height:900px;padding:0;overflow:hidden}.main-cases .cases__item:nth-of-type(1):before{content:"Open Banking";left:0;bottom:-40px}.main-cases .cases__item:nth-of-type(2):before{content:"Vance Pay";top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:rgba(255,255,255,.03);opacity:1;white-space:nowrap}.main-cases .cases__item:nth-of-type(3):before{content:"Cryptocurrency";right:0;top:-40px}.main-cases .item__wrapper{height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.main-cases .cases__title{margin-bottom:80px;margin-left:-150px}.main-cases .item__info{margin-left:150px;max-width:420px}.main-cases .item__subtitle{font-size:3.6rem;font-weight:700;line-height:140%;color:#efd91b;margin-bottom:40px}.main-cases .item__text{font-size:18px;line-height:140%;margin-bottom:40px;color:#fff}.main-cases .item__text ul{margin-left:33px}.main-cases .info-wrap,.main-cases .item__image,.main-cases .item__tags{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.main-cases .item__tags{-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:70px}.main-cases .item__tags .tags__item{color:#b5b5b5;font-size:16px;padding:8px 14px;border:2px solid #b5b5b5;margin-right:14px}.main-cases .info-wrap,.main-cases .item__image{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.main-cases .item__image{width:600px;height:900px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.main-cases .item__image .image-wrap{position:relative;height:1000px;width:auto;aspect-ratio:616/1080}.main-cases .item__image .image-wrap picture,.main-cases .item__image .image-wrap picture img{width:100%;height:100%}.main-cases .item__image,.main-contact,.why-choose{position:relative;overflow:hidden}.why-choose{background:#fbfbfd}.why-choose:before{content:"Quick facts";left:0;bottom:-40px}.why-choose:after{background:url(../../img/main__bg-choose.png) right/cover;content:"";position:absolute;width:15%;height:100%;right:0;top:0}.why-choose .choose__wrapper{padding-top:130px;padding-bottom:130px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.why-choose .choose__col-text{max-width:620px;font-size:18px}.why-choose .choose__col-text p{margin-bottom:15px}.why-choose .choose__title{margin-bottom:25px}.why-choose .choose__col-numbers{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-right:230px}.why-choose .choose__col-numbers .numbers__item{margin-bottom:40px}.why-choose .choose__col-numbers .numbers__item-num{font-size:10rem;color:#efd91b;font-weight:700;line-height:100%}.why-choose .choose__col-numbers .numbers__item-text{font-size:24px;letter-spacing:.24px}.main-contact{width:100%;height:1000px}.main-contact:before{content:"Contact us";z-index:99;top:-40px;left:0}.main-contact .contact__video{position:absolute;width:100%;height:100%;overflow:hidden;-o-object-fit:cover;object-fit:cover;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.main-contact .contact__wrapper{padding-top:80px;padding-bottom:120px;background:#fbfbfd;position:relative;max-width:1050px;margin-left:calc((100% - 1440px)/2);margin-right:calc((100% - 1440px)/2)}.main-contact .contact__wrapper:before{position:absolute;content:"";height:100%;background:#fbfbfd;width:100%;top:0;left:-100%}.main-contact .contact__title{font:700 5.4rem/140% "Ubuntu",sans-serif;margin-bottom:20px}.main-contact .contact__subtitle{font-size:20px;line-height:140%;max-width:530px;margin-bottom:90px}.main-contact .contact__form{width:590px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.main-contact .contact__form .form__item{margin-bottom:40px}.main-contact .contact__form .form__item input{width:100%;background:0 0;border:0;outline:0;font-size:20px;padding:18px 0;border-bottom:2px solid #000;-webkit-transition:all .15s ease-in-out;-o-transition:all .15s ease-in-out;transition:all .15s ease-in-out}.main-contact .contact__form .form__item input::-webkit-input-placeholder{font:20px "Source Sans 3",sans-serif}.main-contact .contact__form .form__item input::-moz-placeholder{font:20px "Source Sans 3",sans-serif}.main-contact .contact__form .form__item input:-ms-input-placeholder{font:20px "Source Sans 3",sans-serif}.main-contact .contact__form .form__item input::-ms-input-placeholder{font:20px "Source Sans 3",sans-serif}.main-contact .contact__form .form__item input::placeholder{font:20px "Source Sans 3",sans-serif}.main-contact .contact__form .form__item input:focus:invalid,.main-contact .contact__form .form__item textarea:focus:invalid{border-bottom:2px solid red}.main-contact .contact__form .form__item textarea{font:20px "Source Sans 3",sans-serif;resize:none;max-width:100%;width:600px;outline:0;height:90px;border:0;background:0 0;border-bottom:2px solid #000}.main-contact .contact__form .form__item-50{width:calc(50% - 15px)}.main-contact .contact__form .form__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.main-contact .contact__form .form__btn{min-width:204px;padding:5px 0;text-align:center;margin-right:30px;border-radius:4px}.main-contact .contact__form .form__btn button{font:18px "Ubuntu",sans-serif;background:0 0;border:0;white-space:nowrap}.main-contact .contact__form .form__text{font-size:15px;line-height:140%}.experts-industries__title{margin-top:175px;margin-bottom:60px}.hero,.hero__video{position:relative}.hero__video{width:100%;height:100vh;min-height:800px;max-height:1200px;overflow:hidden;z-index:-100}.hero__video video{position:absolute;width:100%;height:100%;top:0;left:0;-o-object-fit:cover;object-fit:cover}.hero__wrapper{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.hero__subtitle,.hero__title{text-align:center;margin-bottom:38px;max-width:810px;margin-left:auto;margin-right:auto}.hero__subtitle{max-width:910px;font-size:24px;line-height:140%;margin-bottom:73px}.hero__btn{margin-bottom:24px}.hero__btn,.hero__cta{margin-left:auto;margin-right:auto}.main-services .services__cards{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.main-services .cards__item{max-width:230px}.main-services .card__title{margin-bottom:15px}.main-services .card__text{font-size:17px;color:#949494;line-height:140%}@supports (-webkit-appearance:none){.main-arr-btn::after,.main-cta::after{background-image:url(../img/arrow-right-icon.svg)}.customers-reviews__slider:before{background-image:url(../img/review-quotes.webp)}.industries-list__items-slider .slider__arrow{background-image:url(../../img/industries__slider-arrow.svg)}.technologies-list__col-btn span:after{background-image:url(../../img/technologies__arrow_right.svg)}.why-choose:after{background-image:url(../../img/main__bg-choose.webp)}}@media (min-width:576px){.container{max-width:500px}}@media (min-width:768px){.container{max-width:760px}}@media (min-width:1140px){.container{max-width:1100px}}@media (min-width:1480px){.container{max-width:1440px}}@media (max-width:1479px){.customers-reviews__col-clutch{max-width:400px}.header__nav li:nth-of-type(n+5){display:none}.header__nav li:last-of-type{display:block}.header__nav .more-nav-dropdown{display:block!important}.main-cases .cases__title{margin-left:-100px}.main-cases .item__info{margin-left:100px}.main-cases .item__image{width:400px}.why-choose:after{content:unset}.why-choose .choose__col-numbers{margin-right:0}.main-contact .contact__wrapper{margin-left:calc((100% - 1100px)/2);margin-right:calc((100% - 1100px)/2)}}@media (max-width:1139px){html{font-size:8px}.customers-reviews__wrapper{padding-top:50px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.customers-reviews__col-clutch{max-width:100%}.customers-reviews__title{margin-bottom:40px}.customers-reviews__col-slider{margin-left:auto;margin-right:auto}.customers-list .slider__item{width:150px}.customers-list .slider__item picture{width:80px;height:80px}.industries-list__item{height:400px!important;width:auto}.technologies-list__wrapper{padding-top:80px;padding-bottom:80px}.technologies-list__title{margin-bottom:40px}.technologies-list__slider .item__cards .cards__item{margin-bottom:30px}.technologies-list__col-image{display:none}.technologies-list__col-btn{bottom:unset;top:0;left:unset;right:-20px}.dark-bg{padding:80px 0}.bg-text:before{font-size:120px}.footer__row{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.footer__row:first-of-type{padding-bottom:0}.footer__col{margin-bottom:40px;margin-right:60px}.footer__col-main{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.footer__col-contacts{min-width:50%;-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.footer__col-development{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.footer__col-about{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.header__desktop{display:none}.main-cases .cases__btn{left:unset;-webkit-transform:unset;-ms-transform:unset;transform:unset;right:calc((100% - 760px)/2)}.main-cases .cases__item{height:850px}.main-cases .cases__title{margin-left:0;margin-bottom:40px}.main-cases .item__info{margin-left:0;max-width:360px}.main-cases .item__image{width:290px}.main-cases .item__image .image-wrap{height:700px}.why-choose .choose__wrapper{padding-top:80px;padding-bottom:80px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.why-choose .choose__col-numbers{margin-top:40px;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.why-choose .choose__col-numbers .numbers__item{margin-bottom:0}.main-contact{height:900px}.main-contact .contact__wrapper{margin-left:calc((100% - 760px)/2);margin-right:calc((100% - 760px)/2);padding-bottom:80px}.main-contact .contact__subtitle{margin-bottom:60px}.experts-industries__title{margin-top:80px;margin-bottom:40px}.hero__video{height:60vh}.main-services .services__cards{-ms-flex-wrap:wrap;flex-wrap:wrap}.main-services .cards__item{max-width:calc(50% - 30px);margin-bottom:30px}.main-services .cards__item:nth-of-type(3),.main-services .cards__item:nth-of-type(4){margin-bottom:0}}@media (max-width:767px){html{font-size:6px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */